<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AElFTkSuQmCC
</value>
  </data>
</root>